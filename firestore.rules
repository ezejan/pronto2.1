rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSolicitante() {
      return exists(/databases/$(database)/documents/solicitantes/$(request.auth.uid));
    }
    function isProveedor() {
      return exists(/databases/$(database)/documents/proveedores/$(request.auth.uid));
    }

    match /solicitantes/{uid} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }

    match /proveedores/{uid} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }

    match /pedidos/{pedidoId} {
      allow create: if request.auth != null && isSolicitante();
      allow read: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.token.email == resource.data.email;

      match /presupuestos/{presupuestoId} {
        allow create: if request.auth != null && isProveedor();
        allow read: if request.auth != null && (
          request.auth.token.email == resource.data.proveedorEmail ||
          request.auth.token.email == get(/databases/$(database)/documents/pedidos/$(pedidoId)).data.email
        );
        allow update, delete: if request.auth != null && request.auth.token.email == resource.data.proveedorEmail;
      }
    }
  }
}
